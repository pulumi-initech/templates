name: ${PROJECT}
description: ${DESCRIPTION}
runtime: yaml
template:
  description: An RPS based full-featured web server
  config:
    instanceType:
      type: string
      default: m3.medium
    instanceCount:
      type: integer
      default: 2
resources:
  cert:
    type: acm:index:DnsValidatedCertificate
    properties:
      domainName: ${subDomain}.${hostedZoneName}
      zoneId:
        fn::invoke:
          function: aws:route53:getZone
          arguments:
            name: ${hostedZoneName}
          return: zoneId
  web:
    type: web:index:WebEnvironment
    properties:
      vpcId: ${VpcId}
      vpcCidr: ${CidrBlock}
      publicSubnetIds: ${PublicSubnetIds}
      privateSubnetIds: ${PrivateSubnetIds}
      imageId: ${imageId}
      instanceType: ${instanceType}
      instanceCount: ${instanceCount}
      subdomain: ${subDomain}
      zoneId:
        fn::invoke:
          function: aws:route53:getZone
          arguments:
            name: ${hostedZoneName}
          return: zoneId
      certificateArn: ${cert.certificateArn}
outputs:
  certificateArn:
    value: ${cert.certificateArn}
